import{_ as o,c as i,o as d,ae as c}from"./chunks/framework.Bl2MNIgY.js";const m=JSON.parse('{"title":"リファレンス","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reference.md","filePath":"guide/reference.md","lastUpdated":1759078368000}'),a={name:"guide/reference.md"};function l(t,e,r,n,s,u){return d(),i("div",null,[...e[0]||(e[0]=[c('<h1 id="リファレンス" tabindex="-1">リファレンス <a class="header-anchor" href="#リファレンス" aria-label="Permalink to &quot;リファレンス&quot;">​</a></h1><h2 id="このページの役割" tabindex="-1">このページの役割 <a class="header-anchor" href="#このページの役割" aria-label="Permalink to &quot;このページの役割&quot;">​</a></h2><ul><li>新メンバー向けのスタート地点として、必須リンクや用語をここで確認できるようにします。</li><li>内容を更新したら Pull Request の説明欄に差分概要とローカルで実行したコマンドを記載し、レビュアーに確認を依頼してください。</li></ul><h2 id="ドキュメントとアセットの配置" tabindex="-1">ドキュメントとアセットの配置 <a class="header-anchor" href="#ドキュメントとアセットの配置" aria-label="Permalink to &quot;ドキュメントとアセットの配置&quot;">​</a></h2><ul><li><code>docs/guide/</code> には運用ガイドを追加します。新しい章を作るときはファイル名をケバブケース（例: <code>docs/guide/release-flow.md</code>）に揃え、<code>.vitepress/config.ts</code> のサイドバーへ追記します。</li><li>共有画像やアイコンは <code>docs/public/</code> に保存し、Markdown から相対パスで参照します。</li><li>共同編集したテンプレート類は <code>docs/templates/</code>（未作成の場合は新規作成）に置き、ここからリンクします。</li></ul><h2 id="テンプレートとチェックリスト" tabindex="-1">テンプレートとチェックリスト <a class="header-anchor" href="#テンプレートとチェックリスト" aria-label="Permalink to &quot;テンプレートとチェックリスト&quot;">​</a></h2><ul><li>用語集: プロジェクト特有の略語・設定値を追記し、README と二重管理にならないよう整備します。</li><li>Issue/Pull Request テンプレート: フォーマットを保管し、実際に更新したら <code>.github/</code> 配下にも反映します。</li><li>リリースチェック: ビルド、リンク切れ確認、翻訳レビューなど必須項目を表形式で整理し、完了日と担当者を残します。</li></ul><h2 id="codex-cliセットアップ" tabindex="-1">Codex CLIセットアップ <a class="header-anchor" href="#codex-cliセットアップ" aria-label="Permalink to &quot;Codex CLIセットアップ&quot;">​</a></h2><h3 id="必要環境" tabindex="-1">必要環境 <a class="header-anchor" href="#必要環境" aria-label="Permalink to &quot;必要環境&quot;">​</a></h3><ul><li>Node.js は v22 以上が必須です。<code>node -v</code> で確認し、バージョンが足りない場合は <code>nvm install 22</code> などでアップデートします。citeturn8view0</li><li>npm が同梱されていることを確認し、グローバルパッケージが書き込めるディレクトリ（例: <code>~/.npm-global</code> や <code>%USERPROFILE%\\AppData\\Roaming\\npm</code>）の PATH を通します。citeturn8view0</li></ul><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h3><ol><li>ターミナルで <code>node --version</code> を実行し、v22 以上なら次へ進みます。古い場合は Homebrew を導入し（<code>/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</code>）、<code>brew install node</code> 後に再確認します。citeturn11view0</li><li><code>npm install -g @openai/codex</code> を実行し、インストール完了後に <code>codex</code> コマンドが呼び出せるか確認します。citeturn11view0</li><li>初回起動時はセーフモードの「2」を選び、表示される作業ディレクトリがリポジトリと一致するかを確認してから <code>Enter</code> で開始します。citeturn11view0</li></ol><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><ol><li>Windows Terminal（PowerShell）で <code>node -v</code> を確認し、v22 未満なら「設定 &gt; システム &gt; バージョン情報」で CPU アーキテクチャを確認後、公式サイトから対応する Node.js インストーラを取得して再度バージョンをチェックします。citeturn10view0</li><li>管理者権限の PowerShell で <code>npm install -g @openai/codex</code> を実行し、完了後に <code>codex</code> が呼び出せるか確認します。citeturn10view0</li><li>初回起動時の確認プロンプトには <code>y</code> で進み、表示された作業フォルダがプロジェクト用ディレクトリになっているか必ず見直してください。citeturn10view0</li></ol><h3 id="初回起動とプロジェクト準備" tabindex="-1">初回起動とプロジェクト準備 <a class="header-anchor" href="#初回起動とプロジェクト準備" aria-label="Permalink to &quot;初回起動とプロジェクト準備&quot;">​</a></h3><ul><li><code>codex</code> を起動したら、画面の案内に沿って OpenAI アカウントで認証し、プロジェクトのルートを選択します。</li><li>リポジトリ固有の環境変数（例: <code>DOCS_BASE=/vibecoding-intro/</code>）を <code>.env</code> や PowerShell の <code>$env:DOCS_BASE</code> に設定し、<code>codex</code> から実行するビルドコマンドでも同じ値が使われるか確認します。citeturn8view0</li><li>セッションを再開する場合は <code>codex resume</code> を使うと前回のコンテキストを引き継げます。citeturn8view0</li></ul><h2 id="よくあるトラブル" tabindex="-1">よくあるトラブル <a class="header-anchor" href="#よくあるトラブル" aria-label="Permalink to &quot;よくあるトラブル&quot;">​</a></h2><ul><li>Node.js のバージョンが足りない/パスが通っていない: <code>nvm use 22</code> またはインストーラを再実行し、<code>where node</code>（Windows）/<code>which node</code>（macOS）で参照先を確認します。citeturn8view0</li><li><code>codex</code> が見つからない: <code>npm root -g</code> を確認し、パスを <code>export PATH=$(npm root -g)/../bin:$PATH</code>（macOS）や <code>setx PATH &quot;%PATH%;%APPDATA%\\npm&quot;</code>（Windows）で追加します。citeturn8view0</li><li>初回起動で正しいディレクトリが選べていない: <code>codex</code> の終了後に再度起動し、プロンプトでリポジトリルートを選び直します。citeturn10view0</li></ul>',18)])])}const w=o(a,[["render",l]]);export{m as __pageData,w as default};
